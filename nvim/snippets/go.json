{
  "if error": {
    "prefix": "err",
    "body": "if err != nil {\n\treturn ${0:err}\n}",
    "desc": "if err != nil"
  },
  "if error stack": {
    "prefix": "errs",
    "body": "if err != nil {\n\treturn errors.WithStack(${1:err})\n}",
    "desc": "if error stack"
  },
  "sub test": {
    "prefix": "trun",
    "body": "t.Run(\"${1:description}\", func(t *testing.T) {\n\t${2}\n}",
    "desc": "sub test function"
  },
  "test require no error": {
    "prefix": "tnoe",
    "body": "require.NoError(t, ${1:err})",
    "desc": "Require err is nil"
  },
  "test assert equals": {
    "prefix": "teq",
    "body": "assert.Equals(t, ${1:expect}, ${2:got})",
    "desc": "Assert expect equals got"
  },
  "fmt.Println": {
    "prefix": "pl",
    "body": "fmt.Println(\"${1}\", ${0})",
    "desc": "fmt.Println"
  }
}
