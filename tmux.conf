set -g prefix C-Space
unbind -n Tab
set -g default-terminal "screen-256color"
#set -g default-terminal "screen-256color-italic"

set-option -ga terminal-overrides ",screen-256color:Tc"
set-option -ga terminal-overrides ",xterm-256color:Tc"

bind C-a send-prefix
unbind C-b
set -sg escape-time 1
set -g base-index 1
setw -g pane-base-index 1
bind r source-file ~/.tmux.conf \; display "Reloaded!"
bind | split-window -h
bind - split-window -v
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind a setw synchronize-panes

# dont rename windows
set-option -g allow-rename off

# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

setw -g monitor-activity on
set -g visual-activity off

# Larger scrollback history
set-option -g history-limit 50000

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Fix vim clipboard
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Mouse support
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# mouse can be used to select panes
#set-option -g mouse-select-pane on

# mouse can be used to select windows (by clicking in the status bar)
#set-option -g mouse-select-window on

# mouse can be used to resize panes (by dragging dividers)
#set-option -g mouse-resize-pane on

# not really sure what this does, but with it, the scrollwheel works inside Vim
#set-option -g mouse-utf8 on

# allow mouse to enter copy mode and initiate selection
#set-window-option -g mode-mouse on

# Set status bar position
set-option -g status-position top
set -g status-justify right

# Status bar theme
set -g status-left-length 100
set -g status-left "#S #(whoami)@#(hostname -s)"
setw -g status-bg colour236 # dark gray
setw -g status-fg colour61
setw -g window-status-format "#[fg=colour231]#[bg=colour236] #I#[bg=colour236]#[fg=colour231] #W "
#setw -g window-status-current-format "#[bg=colour22]#[fg=colour15] #I#[fg=colour15]#[bg=colour22] #W "
setw -g window-status-current-format "#[bg=colour61]#[fg=colour231] #I#[fg=colour231]#[bg=colour61] #W "
set -g status-right ""

set-option -g pane-border-fg colour236
set-option -g pane-border-bg default
set-option -g pane-active-border-fg colour245
set-option -g pane-active-border-bg default

set -wg mode-style bg=colour61,fg=colour231

# VIM navigation
# smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-l) || tmux select-pane -R"
